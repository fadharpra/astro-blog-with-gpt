---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			/* main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			} */
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 100%; /* Diubah dari 720px menjadi 100% */
				max-width: 100%; /* Diubah untuk memenuhi grid */
				margin: 0; /* Dihilangkan margin auto */
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			/* Tambahan untuk sticky ToC */
			.sticky-sidebar {
				position: sticky;
				top: 1rem;
				align-self: start;
				height: fit-content;
				max-height: calc(100vh - 8rem);
				overflow-y: auto;
			}
		</style>
	</head>

	<body>
		<Header />
                <main>
                        <article class="mx-auto max-w-6xl px-4">
                                {/* Bagian header: hero image, judul, dan tanggal */}
                                <div class="hero-image">
                                        {heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
                                </div>
                                <div class="title">
                                        <div class="date">
                                                <FormattedDate date={pubDate} />
                                                {
                                                        updatedDate && (
                                                                <div class="last-updated-on">
                                                                        Last updated on <FormattedDate date={updatedDate} />
                                                                </div>
                                                        )
                                                }
                                        </div>
                                        <h1>{title}</h1>
                                        <hr />
                                </div>

                                {/* Grid untuk konten dan ToC */}
                                <div class="grid grid-cols-1 lg:grid-cols-[minmax(0,1fr)_250px] gap-8">
                                        {/* Konten utama */}
                                        <div class="prose">
                                                <slot name="content" />
                                        </div>
                                        
                                        {/* Sidebar untuk ToC - ditempatkan di kolom kanan */}
                                        <div class="sticky-sidebar hidden lg:block">
                                                <slot name="toc" />
                                        </div>
                                </div>
                        </article>
                </main>
		<Footer />
	</body>
</html>